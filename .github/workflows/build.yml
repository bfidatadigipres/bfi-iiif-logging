name: build
on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
jobs:
  linting:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true
      - uses: actions/setup-python@v2
      - uses: pre-commit/action@v2.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
  build_and_push:
    runs-on: ubuntu-20.04
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_USER: logging
          MYSQL_PASSWORD: testactionspw
          MYSQL_ROOT_PASSWORD: testactionspw
          MYSQL_DATABASE: logging
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Extract branch name for push
        run: echo "normalized_branch_name=$(stripped=${GITHUB_REF##*/} && echo ${stripped/\//-})" >> $GITHUB_ENV
        if: github.event_name == 'push'
      - name: Extract branch name for pull request
        run: echo "normalized_branch_name=$(stripped=${PR_REF#refs/heads/} && echo ${stripped/\//-})" >> $GITHUB_ENV
        if: github.event_name == 'pull_request'
        env:
          PR_REF: ${{ github.event.pull_request.head.ref }}
      - name: Set up Gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Run Cypress tests
        run: |
          ./gradlew bootRun &
          cd src/test/cypress
          wait-on http://localhost:8080
          npm test
        env:
          SSL_ENABLED: false
          AUTH0_DOMAIN: ${{ secrets.AUTH0_TEST_DOMAIN }}
          AUTH0_CLIENT_ID: ${{ secrets.AUTH0_TEST_CLIENT_ID }}
          AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_TEST_CLIENT_SECRET }}
          MYSQL_HOST: "localhost:${{ job.services.mysql.ports[3306] }}"
          MYSQL_USERNAME: logging
          MYSQL_PASSWORD: testactionspw
          MYSQL_DATABASE: logging
          CYPRESS_UV_BASE_URL: ${{ secrets.CYPRESS_UV_BASE_URL }}
          CYPRESS_AUTH0_BASE_URL: ${{ secrets.CYPRESS_AUTH0_BASE_URL }}
          CYPRESS_AUTH0_USERNAME: ${{ secrets.CYPRESS_AUTH0_USERNAME }}
          CYPRESS_AUTH0_PASSWORD: ${{ secrets.CYPRESS_AUTH0_PASSWORD }}
      - name: Build and test application
        run: ./gradlew check
        env:
          SSL_ENABLED: false
          AUTH0_DOMAIN: ${{ secrets.AUTH0_TEST_DOMAIN }}
          AUTH0_CLIENT_ID: ${{ secrets.AUTH0_TEST_CLIENT_ID }}
          AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_TEST_CLIENT_SECRET }}
          MYSQL_HOST: "localhost:${{ job.services.mysql.ports[3306] }}"
          MYSQL_USERNAME: logging
          MYSQL_PASSWORD: testactionspw
          MYSQL_DATABASE: logging
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
          registry: ghcr.io
      - name: Push SHA to GitHub Packages
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ghcr.io/bfidatadigipres/bfi-iiif-logging:${{ env.normalized_branch_name }}
            ghcr.io/bfidatadigipres/bfi-iiif-logging:${{ github.sha }}
